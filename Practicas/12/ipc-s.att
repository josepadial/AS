
ipc-s:     file format elf64-x86-64


Disassembly of section .init:

0000000000000c28 <_init>:
 c28:	48 83 ec 08          	sub    $0x8,%rsp
 c2c:	48 8b 05 b5 13 20 00 	mov    0x2013b5(%rip),%rax        # 201fe8 <__gmon_start__>
 c33:	48 85 c0             	test   %rax,%rax
 c36:	74 02                	je     c3a <_init+0x12>
 c38:	ff d0                	callq  *%rax
 c3a:	48 83 c4 08          	add    $0x8,%rsp
 c3e:	c3                   	retq   

Disassembly of section .plt:

0000000000000c40 <.plt>:
 c40:	ff 35 02 13 20 00    	pushq  0x201302(%rip)        # 201f48 <_GLOBAL_OFFSET_TABLE_+0x8>
 c46:	ff 25 04 13 20 00    	jmpq   *0x201304(%rip)        # 201f50 <_GLOBAL_OFFSET_TABLE_+0x10>
 c4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000c50 <__errno_location@plt>:
 c50:	ff 25 02 13 20 00    	jmpq   *0x201302(%rip)        # 201f58 <__errno_location@GLIBC_2.2.5>
 c56:	68 00 00 00 00       	pushq  $0x0
 c5b:	e9 e0 ff ff ff       	jmpq   c40 <.plt>

0000000000000c60 <std::terminate()@plt>:
 c60:	ff 25 fa 12 20 00    	jmpq   *0x2012fa(%rip)        # 201f60 <std::terminate()@GLIBCXX_3.4>
 c66:	68 01 00 00 00       	pushq  $0x1
 c6b:	e9 d0 ff ff ff       	jmpq   c40 <.plt>

0000000000000c70 <nanosleep@plt>:
 c70:	ff 25 f2 12 20 00    	jmpq   *0x2012f2(%rip)        # 201f68 <nanosleep@GLIBC_2.2.5>
 c76:	68 02 00 00 00       	pushq  $0x2
 c7b:	e9 c0 ff ff ff       	jmpq   c40 <.plt>

0000000000000c80 <std::thread::_State::~_State()@plt>:
 c80:	ff 25 ea 12 20 00    	jmpq   *0x2012ea(%rip)        # 201f70 <std::thread::_State::~_State()@GLIBCXX_3.4.22>
 c86:	68 03 00 00 00       	pushq  $0x3
 c8b:	e9 b0 ff ff ff       	jmpq   c40 <.plt>

0000000000000c90 <__cxa_atexit@plt>:
 c90:	ff 25 e2 12 20 00    	jmpq   *0x2012e2(%rip)        # 201f78 <__cxa_atexit@GLIBC_2.2.5>
 c96:	68 04 00 00 00       	pushq  $0x4
 c9b:	e9 a0 ff ff ff       	jmpq   c40 <.plt>

0000000000000ca0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>:
 ca0:	ff 25 da 12 20 00    	jmpq   *0x2012da(%rip)        # 201f80 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@GLIBCXX_3.4.22>
 ca6:	68 05 00 00 00       	pushq  $0x5
 cab:	e9 90 ff ff ff       	jmpq   c40 <.plt>

0000000000000cb0 <operator new(unsigned long)@plt>:
 cb0:	ff 25 d2 12 20 00    	jmpq   *0x2012d2(%rip)        # 201f88 <operator new(unsigned long)@GLIBCXX_3.4>
 cb6:	68 06 00 00 00       	pushq  $0x6
 cbb:	e9 80 ff ff ff       	jmpq   c40 <.plt>

0000000000000cc0 <operator delete(void*, unsigned long)@plt>:
 cc0:	ff 25 ca 12 20 00    	jmpq   *0x2012ca(%rip)        # 201f90 <operator delete(void*, unsigned long)@CXXABI_1.3.9>
 cc6:	68 07 00 00 00       	pushq  $0x7
 ccb:	e9 70 ff ff ff       	jmpq   c40 <.plt>

0000000000000cd0 <__stack_chk_fail@plt>:
 cd0:	ff 25 c2 12 20 00    	jmpq   *0x2012c2(%rip)        # 201f98 <__stack_chk_fail@GLIBC_2.4>
 cd6:	68 08 00 00 00       	pushq  $0x8
 cdb:	e9 60 ff ff ff       	jmpq   c40 <.plt>

0000000000000ce0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>:
 ce0:	ff 25 ba 12 20 00    	jmpq   *0x2012ba(%rip)        # 201fa0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@GLIBCXX_3.4>
 ce6:	68 09 00 00 00       	pushq  $0x9
 ceb:	e9 50 ff ff ff       	jmpq   c40 <.plt>

0000000000000cf0 <std::ios_base::Init::Init()@plt>:
 cf0:	ff 25 b2 12 20 00    	jmpq   *0x2012b2(%rip)        # 201fa8 <std::ios_base::Init::Init()@GLIBCXX_3.4>
 cf6:	68 0a 00 00 00       	pushq  $0xa
 cfb:	e9 40 ff ff ff       	jmpq   c40 <.plt>

0000000000000d00 <std::thread::join()@plt>:
 d00:	ff 25 aa 12 20 00    	jmpq   *0x2012aa(%rip)        # 201fb0 <std::thread::join()@GLIBCXX_3.4.11>
 d06:	68 0b 00 00 00       	pushq  $0xb
 d0b:	e9 30 ff ff ff       	jmpq   c40 <.plt>

0000000000000d10 <std::ostream::operator<<(int)@plt>:
 d10:	ff 25 a2 12 20 00    	jmpq   *0x2012a2(%rip)        # 201fb8 <std::ostream::operator<<(int)@GLIBCXX_3.4>
 d16:	68 0c 00 00 00       	pushq  $0xc
 d1b:	e9 20 ff ff ff       	jmpq   c40 <.plt>

0000000000000d20 <_Unwind_Resume@plt>:
 d20:	ff 25 9a 12 20 00    	jmpq   *0x20129a(%rip)        # 201fc0 <_Unwind_Resume@GCC_3.0>
 d26:	68 0d 00 00 00       	pushq  $0xd
 d2b:	e9 10 ff ff ff       	jmpq   c40 <.plt>

Disassembly of section .plt.got:

0000000000000d30 <__cxa_finalize@plt>:
 d30:	ff 25 92 12 20 00    	jmpq   *0x201292(%rip)        # 201fc8 <__cxa_finalize@GLIBC_2.2.5>
 d36:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000d40 <main>:
     d40:	41 54                	push   %r12
     d42:	55                   	push   %rbp
     d43:	48 8d 35 d0 01 00 00 	lea    0x1d0(%rip),%rsi        # f1a <productor()>
     d4a:	53                   	push   %rbx
     d4b:	48 83 ec 20          	sub    $0x20,%rsp
     d4f:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
     d54:	4c 8d 64 24 10       	lea    0x10(%rsp),%r12
     d59:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     d60:	00 00 
     d62:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     d67:	31 c0                	xor    %eax,%eax
     d69:	48 89 ef             	mov    %rbp,%rdi
     d6c:	e8 cf 02 00 00       	callq  1040 <std::thread::thread<void (&)()>(void (&)())>
     d71:	48 8d 35 2f 02 00 00 	lea    0x22f(%rip),%rsi        # fa7 <consumidor()>
     d78:	4c 89 e7             	mov    %r12,%rdi
     d7b:	e8 c0 02 00 00       	callq  1040 <std::thread::thread<void (&)()>(void (&)())>
     d80:	48 89 ef             	mov    %rbp,%rdi
     d83:	e8 78 ff ff ff       	callq  d00 <std::thread::join()@plt>
     d88:	4c 89 e7             	mov    %r12,%rdi
     d8b:	e8 70 ff ff ff       	callq  d00 <std::thread::join()@plt>
     d90:	4c 89 e7             	mov    %r12,%rdi
     d93:	e8 98 02 00 00       	callq  1030 <std::thread::~thread()>
     d98:	48 89 ef             	mov    %rbp,%rdi
     d9b:	e8 90 02 00 00       	callq  1030 <std::thread::~thread()>
     da0:	31 c0                	xor    %eax,%eax
     da2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
     da7:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
     dae:	00 00 
     db0:	74 25                	je     dd7 <main+0x97>
     db2:	e8 19 ff ff ff       	callq  cd0 <__stack_chk_fail@plt>
     db7:	4c 89 e7             	mov    %r12,%rdi
     dba:	48 89 c3             	mov    %rax,%rbx
     dbd:	e8 6e 02 00 00       	callq  1030 <std::thread::~thread()>
     dc2:	eb 03                	jmp    dc7 <main+0x87>
     dc4:	48 89 c3             	mov    %rax,%rbx
     dc7:	48 89 ef             	mov    %rbp,%rdi
     dca:	e8 61 02 00 00       	callq  1030 <std::thread::~thread()>
     dcf:	48 89 df             	mov    %rbx,%rdi
     dd2:	e8 49 ff ff ff       	callq  d20 <_Unwind_Resume@plt>
     dd7:	48 83 c4 20          	add    $0x20,%rsp
     ddb:	5b                   	pop    %rbx
     ddc:	5d                   	pop    %rbp
     ddd:	41 5c                	pop    %r12
     ddf:	c3                   	retq   

0000000000000de0 <_GLOBAL__sub_I_listo>:
     de0:	48 8d 3d 45 17 20 00 	lea    0x201745(%rip),%rdi        # 20252c <std::__ioinit>
     de7:	48 83 ec 08          	sub    $0x8,%rsp
     deb:	e8 00 ff ff ff       	callq  cf0 <std::ios_base::Init::Init()@plt>
     df0:	48 8b 3d 01 12 20 00 	mov    0x201201(%rip),%rdi        # 201ff8 <std::ios_base::Init::~Init()@GLIBCXX_3.4>
     df7:	48 8d 15 0a 12 20 00 	lea    0x20120a(%rip),%rdx        # 202008 <__dso_handle>
     dfe:	48 8d 35 27 17 20 00 	lea    0x201727(%rip),%rsi        # 20252c <std::__ioinit>
     e05:	58                   	pop    %rax
     e06:	e9 85 fe ff ff       	jmpq   c90 <__cxa_atexit@plt>
     e0b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000e10 <_start>:
     e10:	31 ed                	xor    %ebp,%ebp
     e12:	49 89 d1             	mov    %rdx,%r9
     e15:	5e                   	pop    %rsi
     e16:	48 89 e2             	mov    %rsp,%rdx
     e19:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     e1d:	50                   	push   %rax
     e1e:	54                   	push   %rsp
     e1f:	4c 8d 05 2a 03 00 00 	lea    0x32a(%rip),%r8        # 1150 <__libc_csu_fini>
     e26:	48 8d 0d b3 02 00 00 	lea    0x2b3(%rip),%rcx        # 10e0 <__libc_csu_init>
     e2d:	48 8d 3d 0c ff ff ff 	lea    -0xf4(%rip),%rdi        # d40 <main>
     e34:	ff 15 a6 11 20 00    	callq  *0x2011a6(%rip)        # 201fe0 <__libc_start_main@GLIBC_2.2.5>
     e3a:	f4                   	hlt    
     e3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000e40 <deregister_tm_clones>:
     e40:	48 8d 3d d1 11 20 00 	lea    0x2011d1(%rip),%rdi        # 202018 <__TMC_END__>
     e47:	55                   	push   %rbp
     e48:	48 8d 05 c9 11 20 00 	lea    0x2011c9(%rip),%rax        # 202018 <__TMC_END__>
     e4f:	48 39 f8             	cmp    %rdi,%rax
     e52:	48 89 e5             	mov    %rsp,%rbp
     e55:	74 19                	je     e70 <deregister_tm_clones+0x30>
     e57:	48 8b 05 7a 11 20 00 	mov    0x20117a(%rip),%rax        # 201fd8 <_ITM_deregisterTMCloneTable>
     e5e:	48 85 c0             	test   %rax,%rax
     e61:	74 0d                	je     e70 <deregister_tm_clones+0x30>
     e63:	5d                   	pop    %rbp
     e64:	ff e0                	jmpq   *%rax
     e66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e6d:	00 00 00 
     e70:	5d                   	pop    %rbp
     e71:	c3                   	retq   
     e72:	0f 1f 40 00          	nopl   0x0(%rax)
     e76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     e7d:	00 00 00 

0000000000000e80 <register_tm_clones>:
     e80:	48 8d 3d 91 11 20 00 	lea    0x201191(%rip),%rdi        # 202018 <__TMC_END__>
     e87:	48 8d 35 8a 11 20 00 	lea    0x20118a(%rip),%rsi        # 202018 <__TMC_END__>
     e8e:	55                   	push   %rbp
     e8f:	48 29 fe             	sub    %rdi,%rsi
     e92:	48 89 e5             	mov    %rsp,%rbp
     e95:	48 c1 fe 03          	sar    $0x3,%rsi
     e99:	48 89 f0             	mov    %rsi,%rax
     e9c:	48 c1 e8 3f          	shr    $0x3f,%rax
     ea0:	48 01 c6             	add    %rax,%rsi
     ea3:	48 d1 fe             	sar    %rsi
     ea6:	74 18                	je     ec0 <register_tm_clones+0x40>
     ea8:	48 8b 05 41 11 20 00 	mov    0x201141(%rip),%rax        # 201ff0 <_ITM_registerTMCloneTable>
     eaf:	48 85 c0             	test   %rax,%rax
     eb2:	74 0c                	je     ec0 <register_tm_clones+0x40>
     eb4:	5d                   	pop    %rbp
     eb5:	ff e0                	jmpq   *%rax
     eb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     ebe:	00 00 
     ec0:	5d                   	pop    %rbp
     ec1:	c3                   	retq   
     ec2:	0f 1f 40 00          	nopl   0x0(%rax)
     ec6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     ecd:	00 00 00 

0000000000000ed0 <__do_global_dtors_aux>:
     ed0:	80 3d 59 12 20 00 00 	cmpb   $0x0,0x201259(%rip)        # 202130 <completed.7697>
     ed7:	75 2f                	jne    f08 <__do_global_dtors_aux+0x38>
     ed9:	48 83 3d e7 10 20 00 	cmpq   $0x0,0x2010e7(%rip)        # 201fc8 <__cxa_finalize@GLIBC_2.2.5>
     ee0:	00 
     ee1:	55                   	push   %rbp
     ee2:	48 89 e5             	mov    %rsp,%rbp
     ee5:	74 0c                	je     ef3 <__do_global_dtors_aux+0x23>
     ee7:	48 8b 3d 1a 11 20 00 	mov    0x20111a(%rip),%rdi        # 202008 <__dso_handle>
     eee:	e8 3d fe ff ff       	callq  d30 <__cxa_finalize@plt>
     ef3:	e8 48 ff ff ff       	callq  e40 <deregister_tm_clones>
     ef8:	c6 05 31 12 20 00 01 	movb   $0x1,0x201231(%rip)        # 202130 <completed.7697>
     eff:	5d                   	pop    %rbp
     f00:	c3                   	retq   
     f01:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
     f08:	f3 c3                	repz retq 
     f0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000f10 <frame_dummy>:
     f10:	55                   	push   %rbp
     f11:	48 89 e5             	mov    %rsp,%rbp
     f14:	5d                   	pop    %rbp
     f15:	e9 66 ff ff ff       	jmpq   e80 <register_tm_clones>

0000000000000f1a <productor()>:
     f1a:	41 54                	push   %r12
     f1c:	55                   	push   %rbp
     f1d:	4c 8d 25 1c 12 20 00 	lea    0x20121c(%rip),%r12        # 202140 <mensaje>
     f24:	53                   	push   %rbx
     f25:	31 db                	xor    %ebx,%ebx
     f27:	48 83 ec 20          	sub    $0x20,%rsp
     f2b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
     f32:	00 00 
     f34:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
     f39:	31 c0                	xor    %eax,%eax
     f3b:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
     f40:	41 c7 04 9c 34 12 00 	movl   $0x1234,(%r12,%rbx,4)
     f47:	00 
     f48:	c7 05 d6 15 20 00 01 	movl   $0x1,0x2015d6(%rip)        # 202528 <listo>
     f4f:	00 00 00 
     f52:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
     f59:	00 00 
     f5b:	48 c7 44 24 10 40 42 	movq   $0xf4240,0x10(%rsp)
     f62:	0f 00 
     f64:	48 89 ee             	mov    %rbp,%rsi
     f67:	48 89 ef             	mov    %rbp,%rdi
     f6a:	e8 01 fd ff ff       	callq  c70 <nanosleep@plt>
     f6f:	ff c0                	inc    %eax
     f71:	75 0a                	jne    f7d <productor()+0x63>
     f73:	e8 d8 fc ff ff       	callq  c50 <__errno_location@plt>
     f78:	83 38 04             	cmpl   $0x4,(%rax)
     f7b:	74 e7                	je     f64 <productor()+0x4a>
     f7d:	48 ff c3             	inc    %rbx
     f80:	48 81 fb fa 00 00 00 	cmp    $0xfa,%rbx
     f87:	75 b2                	jne    f3b <productor()+0x21>
     f89:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
     f8e:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
     f95:	00 00 
     f97:	74 05                	je     f9e <productor()+0x84>
     f99:	e8 32 fd ff ff       	callq  cd0 <__stack_chk_fail@plt>
     f9e:	48 83 c4 20          	add    $0x20,%rsp
     fa2:	5b                   	pop    %rbx
     fa3:	5d                   	pop    %rbp
     fa4:	41 5c                	pop    %r12
     fa6:	c3                   	retq   

0000000000000fa7 <consumidor()>:
     fa7:	55                   	push   %rbp
     fa8:	53                   	push   %rbx
     fa9:	48 8d 2d 90 11 20 00 	lea    0x201190(%rip),%rbp        # 202140 <mensaje>
     fb0:	31 db                	xor    %ebx,%ebx
     fb2:	48 83 ec 08          	sub    $0x8,%rsp
     fb6:	83 3d 6b 15 20 00 00 	cmpl   $0x0,0x20156b(%rip)        # 202528 <listo>
     fbd:	75 02                	jne    fc1 <consumidor()+0x1a>
     fbf:	eb fe                	jmp    fbf <consumidor()+0x18>
     fc1:	8b 74 9d 00          	mov    0x0(%rbp,%rbx,4),%esi
     fc5:	48 8d 3d 54 10 20 00 	lea    0x201054(%rip),%rdi        # 202020 <std::cout@@GLIBCXX_3.4>
     fcc:	c7 05 52 15 20 00 00 	movl   $0x0,0x201552(%rip)        # 202528 <listo>
     fd3:	00 00 00 
     fd6:	48 ff c3             	inc    %rbx
     fd9:	e8 32 fd ff ff       	callq  d10 <std::ostream::operator<<(int)@plt>
     fde:	be 20 00 00 00       	mov    $0x20,%esi
     fe3:	48 89 c7             	mov    %rax,%rdi
     fe6:	e8 f5 fc ff ff       	callq  ce0 <std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char)@plt>
     feb:	48 81 fb fa 00 00 00 	cmp    $0xfa,%rbx
     ff2:	75 c2                	jne    fb6 <consumidor()+0xf>
     ff4:	58                   	pop    %rax
     ff5:	5b                   	pop    %rbx
     ff6:	5d                   	pop    %rbp
     ff7:	c3                   	retq   

0000000000000ff8 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::~_State_impl()>:
     ff8:	48 8d 05 f1 0c 20 00 	lea    0x200cf1(%rip),%rax        # 201cf0 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >+0x10>
     fff:	48 89 07             	mov    %rax,(%rdi)
    1002:	e9 79 fc ff ff       	jmpq   c80 <std::thread::_State::~_State()@plt>
    1007:	90                   	nop

0000000000001008 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::~_State_impl()>:
    1008:	53                   	push   %rbx
    1009:	48 89 fb             	mov    %rdi,%rbx
    100c:	e8 e7 ff ff ff       	callq  ff8 <std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::~_State_impl()>
    1011:	48 89 df             	mov    %rbx,%rdi
    1014:	be 10 00 00 00       	mov    $0x10,%esi
    1019:	5b                   	pop    %rbx
    101a:	e9 a1 fc ff ff       	jmpq   cc0 <operator delete(void*, unsigned long)@plt>
    101f:	90                   	nop

0000000000001020 <std::default_delete<std::thread::_State>::operator()(std::thread::_State*) const [clone .isra.2]>:
    1020:	48 85 ff             	test   %rdi,%rdi
    1023:	74 06                	je     102b <std::default_delete<std::thread::_State>::operator()(std::thread::_State*) const [clone .isra.2]+0xb>
    1025:	48 8b 07             	mov    (%rdi),%rax
    1028:	ff 60 08             	jmpq   *0x8(%rax)
    102b:	c3                   	retq   

000000000000102c <std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >::_M_run()>:
    102c:	ff 67 08             	jmpq   *0x8(%rdi)
    102f:	90                   	nop

0000000000001030 <std::thread::~thread()>:
    1030:	48 83 3f 00          	cmpq   $0x0,(%rdi)
    1034:	74 09                	je     103f <std::thread::~thread()+0xf>
    1036:	48 83 ec 08          	sub    $0x8,%rsp
    103a:	e8 21 fc ff ff       	callq  c60 <std::terminate()@plt>
    103f:	c3                   	retq   

0000000000001040 <std::thread::thread<void (&)()>(void (&)())>:
    1040:	55                   	push   %rbp
    1041:	53                   	push   %rbx
    1042:	48 89 fb             	mov    %rdi,%rbx
    1045:	48 89 f5             	mov    %rsi,%rbp
    1048:	48 83 ec 18          	sub    $0x18,%rsp
    104c:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    1053:	bf 10 00 00 00       	mov    $0x10,%edi
    1058:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    105f:	00 00 
    1061:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1066:	31 c0                	xor    %eax,%eax
    1068:	e8 43 fc ff ff       	callq  cb0 <operator new(unsigned long)@plt>
    106d:	48 8d 0d 7c 0c 20 00 	lea    0x200c7c(%rip),%rcx        # 201cf0 <vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)()> > >+0x10>
    1074:	48 8b 15 55 0f 20 00 	mov    0x200f55(%rip),%rdx        # 201fd0 <pthread_create@GLIBC_2.2.5>
    107b:	48 89 68 08          	mov    %rbp,0x8(%rax)
    107f:	48 89 e6             	mov    %rsp,%rsi
    1082:	48 89 df             	mov    %rbx,%rdi
    1085:	48 89 04 24          	mov    %rax,(%rsp)
    1089:	48 89 08             	mov    %rcx,(%rax)
    108c:	e8 0f fc ff ff       	callq  ca0 <std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())@plt>
    1091:	48 8b 3c 24          	mov    (%rsp),%rdi
    1095:	48 85 ff             	test   %rdi,%rdi
    1098:	74 20                	je     10ba <std::thread::thread<void (&)()>(void (&)())+0x7a>
    109a:	e8 81 ff ff ff       	callq  1020 <std::default_delete<std::thread::_State>::operator()(std::thread::_State*) const [clone .isra.2]>
    109f:	eb 19                	jmp    10ba <std::thread::thread<void (&)()>(void (&)())+0x7a>
    10a1:	48 8b 3c 24          	mov    (%rsp),%rdi
    10a5:	48 89 c3             	mov    %rax,%rbx
    10a8:	48 85 ff             	test   %rdi,%rdi
    10ab:	74 05                	je     10b2 <std::thread::thread<void (&)()>(void (&)())+0x72>
    10ad:	e8 6e ff ff ff       	callq  1020 <std::default_delete<std::thread::_State>::operator()(std::thread::_State*) const [clone .isra.2]>
    10b2:	48 89 df             	mov    %rbx,%rdi
    10b5:	e8 66 fc ff ff       	callq  d20 <_Unwind_Resume@plt>
    10ba:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    10bf:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    10c6:	00 00 
    10c8:	74 05                	je     10cf <std::thread::thread<void (&)()>(void (&)())+0x8f>
    10ca:	e8 01 fc ff ff       	callq  cd0 <__stack_chk_fail@plt>
    10cf:	48 83 c4 18          	add    $0x18,%rsp
    10d3:	5b                   	pop    %rbx
    10d4:	5d                   	pop    %rbp
    10d5:	c3                   	retq   
    10d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    10dd:	00 00 00 

00000000000010e0 <__libc_csu_init>:
    10e0:	41 57                	push   %r15
    10e2:	41 56                	push   %r14
    10e4:	49 89 d7             	mov    %rdx,%r15
    10e7:	41 55                	push   %r13
    10e9:	41 54                	push   %r12
    10eb:	4c 8d 25 d6 0b 20 00 	lea    0x200bd6(%rip),%r12        # 201cc8 <__frame_dummy_init_array_entry>
    10f2:	55                   	push   %rbp
    10f3:	48 8d 2d de 0b 20 00 	lea    0x200bde(%rip),%rbp        # 201cd8 <__init_array_end>
    10fa:	53                   	push   %rbx
    10fb:	41 89 fd             	mov    %edi,%r13d
    10fe:	49 89 f6             	mov    %rsi,%r14
    1101:	4c 29 e5             	sub    %r12,%rbp
    1104:	48 83 ec 08          	sub    $0x8,%rsp
    1108:	48 c1 fd 03          	sar    $0x3,%rbp
    110c:	e8 17 fb ff ff       	callq  c28 <_init>
    1111:	48 85 ed             	test   %rbp,%rbp
    1114:	74 20                	je     1136 <__libc_csu_init+0x56>
    1116:	31 db                	xor    %ebx,%ebx
    1118:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    111f:	00 
    1120:	4c 89 fa             	mov    %r15,%rdx
    1123:	4c 89 f6             	mov    %r14,%rsi
    1126:	44 89 ef             	mov    %r13d,%edi
    1129:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    112d:	48 83 c3 01          	add    $0x1,%rbx
    1131:	48 39 dd             	cmp    %rbx,%rbp
    1134:	75 ea                	jne    1120 <__libc_csu_init+0x40>
    1136:	48 83 c4 08          	add    $0x8,%rsp
    113a:	5b                   	pop    %rbx
    113b:	5d                   	pop    %rbp
    113c:	41 5c                	pop    %r12
    113e:	41 5d                	pop    %r13
    1140:	41 5e                	pop    %r14
    1142:	41 5f                	pop    %r15
    1144:	c3                   	retq   
    1145:	90                   	nop
    1146:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    114d:	00 00 00 

0000000000001150 <__libc_csu_fini>:
    1150:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000001154 <_fini>:
    1154:	48 83 ec 08          	sub    $0x8,%rsp
    1158:	48 83 c4 08          	add    $0x8,%rsp
    115c:	c3                   	retq   
